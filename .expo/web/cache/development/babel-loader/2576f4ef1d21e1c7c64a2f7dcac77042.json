{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/aluno/Dev/ReactNativeProjects-IFPE/Login.js\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styleSheet from \"./Styles\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, GoogleAuthProvider } from \"firebase/auth\";\nvar styles = styleSheet;\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAgnmVvKGo21nXmjsaIXvqoSisFTvS9C7k\",\n  authDomain: \"projetinho-flat.firebaseapp.com\",\n  projectId: \"projetinho-flat\",\n  storageBucket: \"projetinho-flat.appspot.com\",\n  messagingSenderId: \"460072259628\",\n  appId: \"1:460072259628:web:63bb4bc2d85e46257a4189\"\n};\nvar app = initializeApp(firebaseConfig);\nvar auth = getAuth();\n\nfunction loginFirebase() {\n  signInWithEmailAndPassword(auth, email, senha).then(function (userCredential) {\n    var user = userCredential.user;\n    console.log(user);\n  }).catch(function (error) {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    console.log(errorMessage, errorCode);\n  });\n}\n\nfunction cadastrarUsuario() {\n  createUserWithEmailAndPassword(auth, email, senha).then(function (userCredential) {\n    var user = userCredential.user;\n    console.log(user);\n  }).catch(function (error) {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    console.log(errorMessage, errorCode);\n  });\n}\n\nvar provider = new GoogleAuthProvider();\nsignInWithPopup(auth, provider).then(function (result) {\n  var credential = GoogleAuthProvider.credentialFromResult(result);\n  var token = credential.accessToken;\n  var user = result.user;\n}).catch(function (error) {\n  var errorCode = error.code;\n  var errorMessage = error.message;\n  var email = error.email;\n  var credential = GoogleAuthProvider.credentialFromError(error);\n});\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setSenha = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.loginInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"user-circle\",\n    size: 60,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.basicText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    value: email,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    style: styles.basicInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.basicText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Senha\"), React.createElement(TextInput, {\n    value: senha,\n    onChangeText: function onChangeText(senha) {\n      return setSenha(senha);\n    },\n    style: styles.basicInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.loginButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Login\",\n    accessibilityLabel: \"Login\",\n    onPress: function onPress() {\n      navigation.navigate('Listagem');\n    },\n    color: \"#4169e1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.loginButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Google\",\n    accessibilityLabel: \"Google\",\n    onPress: signInWithPopup,\n    color: \"#4169e1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.loginButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Cadastre-se\",\n    accessibilityLabel: \"Cadastre-se\",\n    onPress: function onPress() {\n      return createUserWithEmailAndPassword(auth, email, senha);\n    },\n    color: \"#ff4500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["FontAwesome5","React","useState","styleSheet","initializeApp","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","GoogleAuthProvider","styles","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","loginFirebase","email","senha","then","userCredential","user","console","log","catch","error","errorCode","code","errorMessage","message","cadastrarUsuario","provider","result","credential","credentialFromResult","token","accessToken","credentialFromError","Login","navigation","setEmail","setSenha","container","loginInputs","basicText","basicInput","loginButtons","navigate"],"sources":["/home/aluno/Dev/ReactNativeProjects-IFPE/Login.js"],"sourcesContent":["import { FontAwesome5 } from '@expo/vector-icons';\nimport React, { useState } from 'react';\nimport { Text, View, TextInput, Button } from 'react-native';\nimport styleSheet from './Styles';\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, GoogleAuthProvider } from \"firebase/auth\";\n\nconst styles = styleSheet;\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAgnmVvKGo21nXmjsaIXvqoSisFTvS9C7k\",\n  authDomain: \"projetinho-flat.firebaseapp.com\",\n  projectId: \"projetinho-flat\",\n  storageBucket: \"projetinho-flat.appspot.com\",\n  messagingSenderId: \"460072259628\",\n  appId: \"1:460072259628:web:63bb4bc2d85e46257a4189\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\n\nfunction loginFirebase() {\n  signInWithEmailAndPassword(auth, email, senha)\n    .then((userCredential) => {\n      const user = userCredential.user;\n      console.log(user)\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorMessage,errorCode)\n    });\n}\n\nfunction cadastrarUsuario() {\n  createUserWithEmailAndPassword(auth, email, senha)\n    .then((userCredential) => {\n      const user = userCredential.user;\n      console.log(user)\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorMessage,errorCode)\n    });\n}\n\n\nconst provider = new GoogleAuthProvider()\n\nsignInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n\n\n\nexport default function Login({ navigation }) {\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  //const navigation = this.props.navigation;\n  return (\n    <View style={styles.container}>\n      <View style={styles.loginInputs}>\n        <FontAwesome5 name=\"user-circle\" size={60} color=\"black\" />\n        <Text style={styles.basicText}>\n          Login\n          </Text>\n        <TextInput\n          value={email}\n          onChangeText={email => setEmail(email)}\n          style={styles.basicInput} />\n        <Text style={styles.basicText}>\n          Senha\n          </Text>\n        <TextInput\n          value={senha}\n          onChangeText={senha => setSenha(senha)}\n          style={styles.basicInput} />\n      </View>\n      <View style={styles.loginButtons}>\n        <Button title=\"Login\" accessibilityLabel=\"Login\" onPress={() => {navigation.navigate('Listagem')}} color=\"#4169e1\" />\n      </View>\n\n      <View style={styles.loginButtons}>\n        <Button title=\"Google\" accessibilityLabel=\"Google\" onPress={signInWithPopup} color=\"#4169e1\" />\n      </View>\n\n      <View style={styles.loginButtons}>\n        <Button title=\"Cadastre-se\" accessibilityLabel=\"Cadastre-se\" onPress={() => createUserWithEmailAndPassword(auth, email, senha)} color=\"#ff4500\" />\n      </View>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}